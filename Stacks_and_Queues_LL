#include<stdio.h>   
#include<stdlib.h>  
struct node
{  
    int data;   
    struct node *next;
};  
struct node *front;  
struct node *rear;   
void enQueue();  
void deQueue();  
void displayQueue();  
void push();  
void pop();  
void display();  
struct node *head;  

int main ()  
{  
    int choice;   
    while(choice != 7)   
    {    
        printf("\n ***** Queue Operations ***** \n1.Insert an element to Queue\n2.Delete an element from Queue\n3.Display the queue\n \n ***** Stack Operations ***** \n4.Insert an element to Stack\n5.Delete an element from Stack\n6.Display the Stack\n7.Exit\n");   
        printf("\nEnter your choice : ");      
        scanf("%d",&choice);  
        switch(choice)  
        {  
            case 1:  
            enQueue();  
            break;  
            case 2:  
            deQueue();  
            break;  
            case 3:  
            displayQueue();  
            break;  
            case 4:  
                push();  
                break;  
            case 5:  
                pop();  
                break;  
            case 6:  
                display();  
                break;   
            case 7:  
            return(0);  
            break;  
            default:   
            printf("\nInvalid choice !\n");  
            return 0;
        }  
    }  
}  
void enQueue()  
{  
    struct node *ptr;  
    int item;   
      
    ptr = (struct node *) malloc (sizeof(struct node));  
    if(ptr == NULL)  
    {  
        printf("\n QUEUE OVERFLOW ! \n");  
        return;  
    }  
    else  
    {   
        printf("\nEnter the value : \n");  
        scanf("%d",&item);  
        ptr -> data = item;  
        if(front == NULL)  
        {  
            front = ptr;  
            rear = ptr;   
            front -> next = NULL;  
            rear -> next = NULL;  
        }  
        else   
        {  
            rear -> next = ptr;  
            rear = ptr;  
            rear->next = NULL;  
        }  
    }  
}     
void deQueue()  
{  
    struct node *ptr;  
    if(front == NULL)  
    {  
        printf("\nQUEUE UNDERFLOW ! \n");  
        return;  
    }  
    else   
    {  
        ptr = front;
        printf("\n Dequeued element : %d ",ptr->data);
        front = front -> next;  
        free(ptr);
    }  
}  
void displayQueue()  
{  
    struct node *ptr;  
    ptr = front;      
    if(front == NULL)  
    {  
        printf("\nQueue is empty !\n");  
    }  
    else  
    {   printf("\n Queue : ");  
        while(ptr != NULL)   
        {  
            printf("%d ",ptr -> data);  
            ptr = ptr -> next;  
        }  
    }  
}  

void push ()  
{  
    int val;  
    struct node *ptr = (struct node*)malloc(sizeof(struct node));   
    if(ptr == NULL)  
    {  
        printf(" Cannot push the element! \n");   
    }  
    else   
    {  
        printf("Enter the value");  
        scanf("%d",&val);  
        if(head==NULL)  
        {         
            ptr->data = val;  
            ptr -> next = NULL;  
            head=ptr;  
        }   
        else   
        {  
            ptr->data = val;  
            ptr->next = head;  
            head=ptr;  
               
        }  
        printf("\nValue is pushed\n");  
          
    }  
}  
  
void pop()  
{  
    int item;  
    struct node *ptr;  
    if (head == NULL)  
    {  
        printf("\n Stack Underflow! \n");  
    }  
    else  
    {  
        item = head->data;  
        ptr = head;  
        head = head->next;  
        free(ptr);  
        printf("\n Popped element : %d",item);  
          
    }  
}  
void display()  
{  
    int i;  
    struct node *ptr;  
    ptr=head;  
    if(ptr == NULL)  
    {  
        printf("Stack is empty\n");  
    }  
    else  
    {  
        printf("\n Stack elements :");  
        while(ptr!=NULL)  
        {  
            printf("\n%d",ptr->data);  
            ptr = ptr->next;  
        }  
    }  
}  
